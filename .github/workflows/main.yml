name: Laravel test case

on: [pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_DATABASE: ${{ secrets.DB_DATABASE }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Step to print contents of .env.testing file for debugging
      - name: Print contents of .env.testing file
        run: cat .env.testing

      # Step to set database variables from .env.testing file
      - name: Set database variables from .env.testing file
        run: |
          echo "Reading .env.testing file..."
          source .env.testing

      # Step to print database connection details for debugging
      - name: Print database connection details
        run: |
          echo "Database Connection: ${DB_CONNECTION}"
          echo "Database Host: ${DB_HOST}"
          echo "Database Port: ${DB_PORT}"
          echo "Database Name: ${DB_DATABASE}"
          echo "Database Username: ${DB_USERNAME}"
          echo "Database Password: ${DB_PASSWORD}"

      # Step to check if the database exists and create it if necessary
      - name: Check if database exists
        id: check_db
        run: |
          # Check if the database exists
          if mysql -h$DB_HOST -u$DB_USERNAME -p$DB_PASSWORD -e "use $DB_DATABASE"; then
            echo "Database exists"
            echo "database_exists=true" >> $GITHUB_ENV
          else
            echo "Database does not exist"
            echo "database_exists=false" >> $GITHUB_ENV
          fi

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Create database if it doesn't exist
        if: steps.check_db.outputs.database_exists == 'false'
        run: |
          # Create the database
          mysql -h$DB_HOST -u$DB_USERNAME -p$DB_PASSWORD -e "CREATE DATABASE $DB_DATABASE"

      - name: Run database migrations
        run: php artisan migrate --force

      - name: Run Pest tests
        run: ENV=testing ./vendor/bin/pest
